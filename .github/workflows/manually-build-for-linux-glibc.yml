name: manually build package for linux-glibc

on:
  workflow_dispatch:
    inputs:

      package-name:
        description: input the package name to be built
        required: true

      target-arch:
        description: choose a target arch to be built for
        type: choice
        options:
          - x86_64
          - aarch64
          - ppc64le
          - riscv64
          - s390x

      build-onos:
        description: choose a os would be built on
        type: choice
        options:
          - ubuntu:24.04
          - ubuntu:23.10
          - ubuntu:23.04
          - ubuntu:22.10
          - ubuntu:22.04
          - ubuntu:20.10
          - ubuntu:20.04
          - ubuntu:18.10
          - ubuntu:18.04
          - ubuntu:16.04
          - ubuntu:14.04

      profile:
        description: choose a build profile
        type: choice
        options:
          - release
          - debug

      log-level:
        description: choose a log-level
        type: choice
        options:
          - ''
          - '-q'
          - '-v'
          - '-x'

      bundle-type:
        description: choose a bundle type
        type: choice
        options:
          - .tar.xz
          - .tar.lz
          - .tar.gz
          - .tar.bz2
          - .zip

      static:
        description: create fully statically linked executables
        type: boolean
        default: false

      portable:
        description: bundle all needed libraries into the archive
        type: boolean
        default: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: create run.sh
        run: |
          if [ ${{ github.event.inputs.static }} = true ] ; then
            FSLE=--static
          else
            FSLE=
          fi

          if [ ${{ github.event.inputs.portable }} = true ] ; then
            PORTABLE=--portable
          else
            PORTABLE=
          fi


          cat > run.sh <<EOF
          set -e

          COLOR_GREEN='\033[0;32m'        # Green
          COLOR_PURPLE='\033[0;35m'       # Purple
          COLOR_OFF='\033[0m'             # Reset

          echo() {
              printf '%b\n' "\$*"
          }

          run() {
              echo "\${COLOR_PURPLE}==>\${COLOR_OFF} \${COLOR_GREEN}\$@\${COLOR_OFF}"
              eval "\$*"
          }

          run uname -a

          export GITHUB_ACTIONS=true

          case ${{ github.event.inputs.build-onos }} in
            ubuntu:*)
              run apt -y update
              run apt -y install curl xz-utils g++
              ;;
          esac

          run curl -LO https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg
          run chmod a+x ppkg

          run ./ppkg setup
          run ./ppkg update
          run ./ppkg install ${{ github.event.inputs.package-name }} --profile=${{ github.event.inputs.profile }} ${{ github.event.inputs.log-level }} $FSLE
          run ./ppkg bundle  ${{ github.event.inputs.package-name }} ${{ github.event.inputs.bundle-type }} $PORTABLE
          EOF

          chmod +x run.sh

      - name: execute run.sh in the docker container
        run: |
          case ${{ github.event.inputs.target-arch }} in
            x86_64)  IMAGE='${{ github.event.inputs.build-onos }}'         ;;
            aarch64) IMAGE='arm64v8/${{ github.event.inputs.build-onos }}' ;;
            ppc64le) IMAGE='ppc64le/${{ github.event.inputs.build-onos }}' ;;
            riscv64) IMAGE='riscv64/${{ github.event.inputs.build-onos }}' ;;
            s390x)   IMAGE='s390x/${{ github.event.inputs.build-onos }}'   ;;
          esac

          if [ '${{ github.event.inputs.target-arch }}' != 'x86_64' ] ; then
            # https://github.com/multiarch/qemu-user-static
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          fi

          docker run -v $PWD:$PWD -w $PWD "$IMAGE" sh run.sh

      - run: ls

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.package-name }}---linux-glibc-${{ github.event.inputs.target-arch }}.${{ github.event.inputs.profile }}${{ github.event.inputs.bundle-type }}
          path: '*${{ github.event.inputs.bundle-type }}'
